#lang racket

(define (sub-interval x y)
  (make-interval (- (lower-bound x) (upper-bound y))
                 (- (upper-bound x) (lower-bound y))))

(define (make-interval a b) (cons a b))

(define (upper-bound interval)
  (cdr interval))

(define (lower-bound interval)
  (car interval))

;test
(define a (make-interval 1 5))
(define b (make-interval -3 1))
(define c (make-interval -6 -2))
(define d (make-interval -1 0))

(sub-interval a b);(0,8)
(sub-interval b c);(-1,7)
(sub-interval c d);(-6,-1)
(sub-interval d a);(-6,-1)