#lang racket

(define (tree-map f tree)
  (if (null? tree) 
      null
      (if (pair? tree)
          (cons (tree-map f (car tree))
                (tree-map f (cdr tree)))
          (f tree))))

(define (sqr-tree tree) 
  (tree-map sqr tree))

(sqr-tree
 (list 1
       (list 2 (list 3 4) 5)
       (list 6 7)))
;(1 (4 (9 16) 25) (36 49))