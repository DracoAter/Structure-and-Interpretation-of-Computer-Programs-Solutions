#lang racket

(define delta 0.00000001)

(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) delta))
  (define (try guess)
    (let ((next (f guess)))
      (newline)
      (display next)
      (if (close-enough? guess next)
          next
          (try next))))
  
  (try first-guess))

;simple
(fixed-point (lambda (x) (/ (log 1000) (log x))) 2)
(display " *** ")
;average damping
(fixed-point (lambda (x) (/ (+ x (/ (log 1000) (log x))) 2)) 2)