#lang racket

(define (same-parity x . lst)
  (append (lambda (y) (= (remainder x 2) (remainder y 2))) lst null))

(define (append filter list1 list2)
  (cond ((null? list1) list2)
        ((filter (car list1)) 
         (cons (car list1) (append filter (cdr list1) list2)))
        (else (append filter (cdr list1) list2))))

;test
(equal? (list 1 3 5) (same-parity 5 1 2 3 4 6 5))
(equal? (list 2 6 4) (same-parity 4 2 1 3 5 6 4))