#lang racket

(define (fringe tree)
  (cond ((null? tree) (list))
        ((pair? tree) (append (fringe (car tree)) 
                              (fringe (cdr tree))))
        (else (list tree))))
        

;test
(fringe null);()
(fringe (list 1 2));(1 2)   
(define x (list (list 1 2) (list 3 4)))
(fringe x);(1 2 3 4)
(fringe (list x x));(1 2 3 4 1 2 3 4)

