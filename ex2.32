#lang racket

(define (subsets s)
  (define (append-car lst)
    (cons (car s) lst))
  (if (null? s)
      (list null)
      (let ((rest (subsets (cdr s))))
        (append rest (map append-car rest)))))


;test
(subsets (list 1))
(subsets (list 1 2))
(subsets (list 1 2 3))
;(() (3) (2) (2 3) (1) (1 3) (1 2) (1 2 3))


